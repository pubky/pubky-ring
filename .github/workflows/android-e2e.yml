name: Android E2E Tests
description: 'Testing manual emulator setup to resolve UiAutomator2 crashes'

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      commit-sha:
        description: 'Commit SHA to test (leave empty to use current branch head)'
        required: false
        type: string

jobs:
  android-e2e:
    runs-on: macos-latest
    concurrency:
      group: android-e2e-${{ github.head_ref }}
      cancel-in-progress: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    # - name: Enable KVM
    #   run: |
    #     echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
    #     sudo udevadm control --reload-rules
    #     sudo udevadm trigger --name-match=kvm
    #   shell: bash

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    # - name: Set up Android SDK
    #   uses: android-actions/setup-android@v3

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Install Appium drivers
      run: yarn e2e:drivers

    - name: Wait for Android Build
      id: wait-android-build
      uses: ./.github/actions/wait-for-workflow
      with:
        workflow-name: 'Android Build'
        commit-sha: 28ecfbe6650548bf3b2edd029723df7a6af71e57 #${{ github.event.inputs.commit-sha || github.event.pull_request.head.sha || github.sha }}
        max-attempts: '360'  # 1 hour with 10s intervals

    - name: Download Android APK
      uses: dawidd6/action-download-artifact@v6
      with:
        name: android-release-apk
        path: ./artefacts
        workflow: android-build.yml
        run_id: ${{ steps.wait-android-build.outputs.workflow-run-id }}

    # - name: Download APK from URL
    #   run: |
    #     mkdir -p ./artefacts
    #     curl -L "https://github.com/synonymdev/bitkit/releases/download/v1.1.3/app-x86_64-release.apk" -o ./artefacts/app-release.apk

    - name: Set up Android SDK manually
      uses: android-actions/setup-android@v3

    - name: Fix Android emulator HVF error on macOS
      run: bash .github/workflows/mac-avd.sh

    # - name: Create and start Android emulator manually
    #   run: |
    #     # Set correct AVD home directory
    #     export ANDROID_AVD_HOME=$HOME/.android/avd
    #     mkdir -p $ANDROID_AVD_HOME
        
    #     # Debug environment variables
    #     echo "ANDROID_HOME: $ANDROID_HOME"
    #     echo "ANDROID_AVD_HOME: $ANDROID_AVD_HOME"
    #     echo "HOME: $HOME"
        
    #     # Accept licenses
    #     echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
        
    #     # Install system image first - try a more standard one
    #     $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-34;google_apis;x86_64"
        
    #     # List available devices to debug
    #     $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list device
        
    #     # Create AVD with more stable configuration
    #     echo "Creating AVD..."
    #     echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd \
    #       --force \
    #       --name "Pixel_6_AVD" \
    #       --package "system-images;android-34;google_apis;x86_64" \
    #       --device "pixel_6"
        
    #     # List available AVDs to verify creation
    #     echo "Available AVDs:"
    #     $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list avd
        
    #     # Debug AVD file locations
    #     echo "Checking AVD files:"
    #     ls -la $ANDROID_AVD_HOME/ || echo "No AVDs in $ANDROID_AVD_HOME"
    #     ls -la $HOME/.config/.android/avd/ || echo "No AVDs in $HOME/.config/.android/avd"
        
    #     # Start emulator in background with Pixel 6 resolution and logging
    #     $ANDROID_HOME/emulator/emulator \
    #       -avd Pixel_6_AVD \
    #       -avd-arch x86_64 \
    #       -delay-adb \
    #       -no-window \
    #       -gpu host \
    #       -no-snapshot \
    #       -noaudio \
    #       -no-boot-anim \
    #       -camera-back none \
    #       -camera-front none \
    #       -memory 4096 \
    #       -cores 4 \
    #       -accel on \
    #       -netdelay none \
    #       -netspeed full \
    #       -wipe-data \
    #       -skin 1080x2400 \
    #       -logcat '*:V' \
    #       -verbose \
    #       > emulator.log 2>&1 &
        
    #     # Wait for emulator to be ready
    #     echo "Waiting for emulator to boot..."
    #     $ANDROID_HOME/platform-tools/adb wait-for-device
    #     echo "Emulator is ready"
        
    #     # Start logcat capture in background
    #     $ANDROID_HOME/platform-tools/adb logcat -v time > logcat.log 2>&1 &
    #     LOGCAT_PID=$!
    #     echo "Started logcat capture (PID: $LOGCAT_PID)"
        
    #     # Wait for boot to complete
    #     echo "Waiting for boot to complete..."
    #     $ANDROID_HOME/platform-tools/adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
    #     echo "Boot completed"
        
    #     # Disable animations for stability
    #     $ANDROID_HOME/platform-tools/adb shell settings put global window_animation_scale 0
    #     $ANDROID_HOME/platform-tools/adb shell settings put global transition_animation_scale 0
    #     $ANDROID_HOME/platform-tools/adb shell settings put global animator_duration_scale 0
        
    #     # Install APK
    #     $ANDROID_HOME/platform-tools/adb install ./artefacts/app-release.apk
    #     echo "APK installed"
    #   env:
    #     ANDROID_APP: ./artefacts/app-release.apk
    #     ANDROID_DEVICE_NAME: Pixel_6_AVD
    #     ANDROID_PLATFORM_VERSION: 14
    #     HOMESERVER_ADMIN_PASSWORD: ${{ secrets.HOMESERVER_ADMIN_PASSWORD }}

    # - name: Create screenshots directory
    #   run: mkdir -p ./e2e/screenshots

    # - name: Run E2E tests
    #   run: yarn e2e:android
    #   env:
    #     ANDROID_APP: ./artefacts/app-release.apk
    #     ANDROID_DEVICE_NAME: Pixel_6_AVD
    #     AVD: Pixel_6_AVD
    #     ANDROID_PLATFORM_VERSION: 14
    #     HOMESERVER_ADMIN_PASSWORD: ${{ secrets.HOMESERVER_ADMIN_PASSWORD }}

    - name: Run E2E tests on Android emulator
      uses: reactivecircus/android-emulator-runner@v2
      env:
        ANDROID_APP: ./artefacts/app-release.apk
        ANDROID_DEVICE_NAME: Pixel_6
        ANDROID_PLATFORM_VERSION: 14
        HOMESERVER_ADMIN_PASSWORD: ${{ secrets.HOMESERVER_ADMIN_PASSWORD }}
      with:
        profile: pixel_6
        api-level: 34
        avd-name: Pixel_6
        force-avd-creation: false
        emulator-options: -no-window -gpu host -no-snapshot -noaudio -no-boot-anim -camera-back none -camera-front none
        arch: arm64-v8a
        disable-animations: false
        script: yarn e2e:android

    # - name: Stop emulator and collect logs
    #   if: always()
    #   run: |
    #     # Stop logcat capture
    #     if [ ! -z "$LOGCAT_PID" ]; then
    #       echo "Stopping logcat capture (PID: $LOGCAT_PID)"
    #       kill $LOGCAT_PID 2>/dev/null || true
    #     fi
        
    #     # Get final system state
    #     echo "=== Final System State ===" > system-state.log
    #     $ANDROID_HOME/platform-tools/adb shell getprop >> system-state.log 2>&1 || true
    #     $ANDROID_HOME/platform-tools/adb shell dumpsys meminfo >> system-state.log 2>&1 || true
    #     $ANDROID_HOME/platform-tools/adb shell dumpsys cpuinfo >> system-state.log 2>&1 || true
        
    #     # Stop emulator
    #     $ANDROID_HOME/platform-tools/adb emu kill || true
        
    #     # Wait a moment for logs to flush
    #     sleep 5

    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-e2e-screenshots
        path: ./e2e/screenshots/
        retention-days: 7

    - name: Upload Emulator Logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-e2e-emulator-logs
        path: |
          ./emulator.log
          ./logcat.log
          ./system-state.log
        retention-days: 7


    - name: Upload Errors
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-e2e-errors
        path: ./errors.txt
        retention-days: 7

    - name: Upload Dmesg
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-e2e-dmesg
        path: ./dmesg.txt
        retention-days: 7


    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-e2e-results
        path: |
          ./e2e/results/
        retention-days: 7
