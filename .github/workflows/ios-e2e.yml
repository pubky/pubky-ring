name: iOS E2E Tests

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      commit-sha:
        description: 'Commit SHA to test (leave empty to use current branch head)'
        required: false
        type: string

jobs:
  ios-e2e:
    runs-on: macos-latest
    concurrency:
      group: ios-e2e-${{ github.head_ref }}
      cancel-in-progress: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Install Appium drivers
      run: yarn e2e:drivers

    - name: Install iOS dependencies
      run: |
        cd ios
        pod install

    - name: Wait for iOS Build
      id: wait-ios-build
      uses: ./.github/actions/wait-for-workflow
      with:
        workflow-name: 'iOS Build'
        commit-sha: ${{ github.event.inputs.commit-sha || github.event.pull_request.head.sha || github.ref }}
        max-attempts: '360'  # 1 hour with 10s intervals

    - name: Download iOS App
      uses: dawidd6/action-download-artifact@v4
      with:
        name: ios-release-app
        path: ./artifacts
        workflow: ios-build.yml
        run_id: ${{ steps.wait-ios-build.outputs.workflow-run-id }}

    - name: Extract iOS App Bundle
      run: |
        cd artifacts
        unzip pubkyring.app.zip
        ls -la

    - name: Start iOS Simulator and Run E2E Tests
      run: |
        echo "=== Starting iOS E2E Test Setup ==="

        # List available simulators
        echo "=== Available iOS Simulators ==="
        xcrun simctl list devices

        # Boot the simulator
        echo "=== Booting iOS Simulator ==="
        xcrun simctl boot "iPhone 15" || echo "Simulator boot failed, trying to create..."

        # Wait for simulator to be ready
        echo "=== Waiting for Simulator to be Ready ==="
        xcrun simctl list devices | grep "iPhone 15" | grep "Booted" || {
          echo "Simulator not booted, attempting to boot again..."
          xcrun simctl shutdown "iPhone 15" || true
          sleep 5
          xcrun simctl boot "iPhone 15"
        }

        # Wait for simulator to be fully ready
        echo "=== Waiting for Simulator to be Fully Ready ==="
        sleep 15

        # Install the app
        echo "=== Installing iOS App ==="
        xcrun simctl install booted ./artifacts/pubkyring.app

        # Verify app installation
        echo "=== Verifying App Installation ==="
        xcrun simctl listapps booted | grep pubky || echo "No pubky apps found"

        # Set environment variable
        export IOS_APP=./artifacts/pubkyring.app

        # Create artifacts directory for test recordings
        echo "=== Creating Artefacts Directory ==="
        mkdir -p ./e2e/artefacts

        # Start simulator log capture in background
        echo "=== Starting Simulator Log Capture ==="
        xcrun simctl spawn booted log stream --predicate 'process == "pubkyring"' > ios-simulator-logs.txt &
        LOG_PID=$!

        # Run E2E tests with video recording enabled
        echo "=== Running E2E Tests ==="
        RECORD_VIDEO=true yarn e2e:ios || TEST_EXIT_CODE=$?

        # Stop log capture
        echo "=== Stopping Log Capture ==="
        kill $LOG_PID || true

        # Exit with test result
        exit ${TEST_EXIT_CODE:-0}

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-e2e-results
        path: |
          ./e2e/results/
          ./e2e/artefacts/
          ./ios-simulator-logs.txt
        retention-days: 7
